{"version":3,"sources":["components/Map.js","components/APIKey.js","components/DataTable.js","components/MassChart.js","colorSchemeGenerator.js","components/ClassChart.js","components/TogglePanel.js","components/InfoBox.js","components/Page.js","index.js"],"names":["MAP_VIEW","MapView","repeat","INITIAL_VIEW","longitude","latitude","zoom","maxZoom","pitch","bearing","Deck","props","state","x","y","hoveredObject","expandedObjects","pointerX","pointerY","hoverCallback","selectedData","data","this","classes","className","tooltip","style","left","top","name","year","class","mass","d","setState","ScatterplotLayer","id","pickable","opacity","stroked","filled","radiusScale","radiusMinPixels","radiusMaxPixels","lineWidthMinPixels","getPosition","coordinates","getRadius","getFillColor","includes","getLineColor","onHover","info","object","updateTriggers","mapStyle","root","layers","getLayer","views","initialViewState","controller","dragRotate","reuseMaps","preventStyleDiffing","mapboxApiAccessToken","_renderTooltip","Component","withStyles","theme","minHeight","maxWidth","position","marginBottom","marginLeft","marginTop","zIndex","pointerEvents","color","backgroundColor","padding","useStyles","makeStyles","maxHeight","table","minWidth","cell","label","highlight","DataTable","RenderTableCell","TableRow","onMouseLeave","TableCell","component","scope","align","onMouseEnter","TableContainer","Paper","Table","stickyHeader","size","aria-label","TableHead","TableBody","map","key","display","paper","marginRight","textAlign","fontSize","svg","text","textAnchor","Bar","width","height","setHover","React","useState","fill","setFill","enter","leave","undefined","MassChart","setSelectedData","hover","vw","view_width","window","innerWidth","vh","view_height","innerHeight","svgWidth","svgHeight","margin","right","bottom","scaleLinear","domain","mean","range","bins","histogram","value","thresholds","ticks","hist","y_max","max","length","ToolTip","x0","x1","transform","ref","node","select","call","axisBottom","axisLeft","i","calculatePoint","intervalSize","colorRangeInfo","colorStart","colorEnd","useEndAsStart","title","arc","Arc","replace","ClassChart","radius","Math","min","all_classes","Array","from","values","counts","cls","colorScale","interpolateBlues","scheme","dataLength","colorPoint","colorArray","push","interpolateColors","Object","keys","keysSorted","sort","a","b","scaleOrdinal","data_ready","pie","make_pie","entries","innerRadius","outerRadius","startAngle","endAngle","PI","pad","YEARS","Alert","elevation","variant","paddingBottom","green","outline_green","borderColor","timeline","load","alert","Timeline","Slider","valuetext","TogglePanel","smallSnack","setSnackSmall","mediumSnack","setSnackMedium","largeSnack","setSnackLarge","animation","setAnimation","setTimeline","setData","closeSmall","event","reason","closeMedium","closeLarge","Typography","gutterBottom","Button","outlined","onClick","onChange","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","tmpTimeline","interval","setInterval","clearInterval","Snackbar","open","autoHideDuration","onClose","severity","filledInfo","dialog","box","borderRadius","link","spacing","deck","Page","small_data","totalData","setTotalData","dispData","setDispData","MapState","createRef","updateMapHover","current","Grid","container","item","xs","quantity","concat","medium_data","large_data","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd0f03f4.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport DeckGL from '@deck.gl/react';\nimport { withStyles } from '@material-ui/styles';\nimport {StaticMap} from 'react-map-gl';\nimport {ScatterplotLayer} from '@deck.gl/layers';\nimport {MapView} from '@deck.gl/core';\nimport MAPBOX_ACCESS_TOKEN from './APIKey';\n\nconst styles = theme => ({\n  root: {\n    minHeight: '64vh',\n    maxWidth: '100%',\n    position: 'relative',\n    marginBottom: '8px',\n    marginLeft: '8px',\n    marginTop: '8px',\n  },\n  tooltip: {\n    position: 'absolute',\n    zIndex: 100,\n    pointerEvents: 'none',\n    color: '#4fbbd6',\n    backgroundColor: '#242730',\n    padding: '8px 8px 8px 8px',\n  },\n});\n\nconst MAP_VIEW = new MapView({repeat: true});\nconst INITIAL_VIEW = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.7,\n  maxZoom: 20,\n  pitch: 0,\n  bearing: 0\n};\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      x: 0,\n      y: 0,\n      hoveredObject: null,\n      expandedObjects: null,\n      pointerX: null,\n      pointerY: null,\n      hoverCallback: props.hoverCallback,\n      selectedData: null\n    };\n    this.data = props.data;\n  }\n\n  _renderTooltip() {\n    const {hoveredObject, pointerX, pointerY} = this.state || {};\n    const { classes } = this.props;\n    return hoveredObject && (\n      <div className={classes.tooltip} style={{left: pointerX+20, top: pointerY+20}}>\n        Name: { hoveredObject.name } <br />\n        Year: { hoveredObject.year } <br />\n        Class: { hoveredObject.class } <br />\n        Mass: { hoveredObject.mass } <br />\n      </div>\n    );\n  }\n\n  setSelectedData(d) {\n    this.setState({\n      selectedData: d\n    })\n  }\n\n  // documentation: https://deck.gl/#/documentation/deckgl-api-reference/layers/scatterplot-layer?section=getposition-function-optional-transition-enabled\n  getLayer() {\n    const {data = this.data} = this.props;\n    return new ScatterplotLayer({\n      id: 'scatterplot-layer',\n      data,\n      pickable: true,\n      opacity: 0.8,\n      stroked: true,\n      filled: true,\n      radiusScale: 6,\n      radiusMinPixels: 5,\n      radiusMaxPixels: 8,\n      lineWidthMinPixels: 1,\n      getPosition: d => d.coordinates,\n      getRadius: d => d.mass * 1,\n      getFillColor: d => {\n        if((this.state.selectedData !== null && this.state.selectedData.includes(d)) ||\n           d === this.state.hoveredObject) {\n          return [213, 93, 14]\n        }\n        return [79, 187, 214]\n      },\n      getLineColor: d => [0, 0, 0],\n      onHover: info => {\n        this.setState({\n          hoveredObject: info.object,\n          pointerX: info.x,\n          pointerY: info.y\n        })\n        this.state.hoverCallback([info.object])\n      },\n      updateTriggers: {\n        getFillColor: [this.state]\n      }\n    });\n  }\n  \n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <DeckGL\n          layers={this.getLayer()}\n          views={MAP_VIEW}\n          initialViewState={INITIAL_VIEW}\n          controller={{dragRotate: false}}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n          />\n          { this._renderTooltip() }\n        </DeckGL>\n      </div>\n    );\n  }\n}\n\nDeck.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Deck);\n","export default 'pk.eyJ1IjoiMHhqZXJlbXkiLCJhIjoiY2s4ZjA0dWJnMDFzZjNscGxxYnQ3azh1aiJ9.i8HN9UX1ngyGwmpcuXKqtA';","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n  root: {\n    maxHeight: '33vh',\n    backgroundColor: '#242730',\n  },\n  table: {\n    minWidth: 650,\n  },\n  cell: {\n    color: 'white'\n  },\n  label: {\n    color: '#4fbbd6',\n    backgroundColor: '#242730',\n  },\n  highlight: {\n    color: '#D55D0E',\n  }\n});\n\nexport default function DataTable(props) {\n  const classes = useStyles();\n  const data = props.data;\n  const selectedData = props.selectedData;\n  const hoverCallback = props.hoverCallback;\n\n  function RenderTableCell(props) {\n    const d = props.d;\n    if(selectedData !== null && selectedData[0] === d) {\n      return (\n        <TableRow onMouseLeave={() => {hoverCallback(null)}}>\n          <TableCell className={classes.highlight} component=\"th\" scope=\"row\">\n            {d.name}\n          </TableCell>\n          <TableCell className={classes.highlight} align=\"right\">{d.year}</TableCell>\n          <TableCell className={classes.highlight} align=\"right\">{d.class}</TableCell>\n          <TableCell className={classes.highlight} align=\"right\">{d.mass}</TableCell>\n          <TableCell className={classes.highlight} align=\"right\">{d.coordinates[0]}</TableCell>\n          <TableCell className={classes.highlight} align=\"right\">{d.coordinates[1]}</TableCell>\n        </TableRow>\n      )\n    }\n    return (\n      <TableRow onMouseEnter={() => {hoverCallback([d])}} onMouseLeave={() => {hoverCallback(null)}}>\n        <TableCell className={classes.cell} component=\"th\" scope=\"row\">\n          {d.name}\n        </TableCell>\n        <TableCell className={classes.cell} align=\"right\">{d.year}</TableCell>\n        <TableCell className={classes.cell} align=\"right\">{d.class}</TableCell>\n        <TableCell className={classes.cell} align=\"right\">{d.mass}</TableCell>\n        <TableCell className={classes.cell} align=\"right\">{d.coordinates[0]}</TableCell>\n        <TableCell className={classes.cell} align=\"right\">{d.coordinates[1]}</TableCell>\n      </TableRow>\n    )\n  }\n\n  return (\n    <TableContainer className={classes.root} component={Paper}>\n      <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.label}>Name</TableCell>\n            <TableCell className={classes.label} align=\"right\">Year&nbsp;</TableCell>\n            <TableCell className={classes.label} align=\"right\">Class&nbsp;</TableCell>\n            <TableCell className={classes.label} align=\"right\">Mass&nbsp;(g)</TableCell>\n            <TableCell className={classes.label} align=\"right\">Latitude&nbsp;</TableCell>\n            <TableCell className={classes.label} align=\"right\">Longitude&nbsp;</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((d) => \n            <RenderTableCell d={d} key={d.name}/>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { scaleLinear } from 'd3-scale';\nimport { max, mean } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nimport { histogram } from 'd3-array';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginBottom: '8px',\n    marginRight: '8px',\n    marginTop: '8px',\n    textAlign: 'center',\n    color: '#4fbbd6',\n    fontSize: '40px',\n    backgroundColor: '#242730',\n    minHeight: '30vh',\n    padding: '0 0 0 0'\n  },\n  svg: {\n    minHeight: '31vh',\n    minWidth: '100%',\n  },\n  text: {\n    textAnchor: \"end\",\n    color: '#4fbbd6',\n    fontSize: '20px'\n  },\n}));\n\nfunction Bar(props) {\n  const d = props.d;\n  const x = props.x;\n  const y = props.y;\n  const width = props.width;\n  const height = props.height;\n  const key = props.key;\n  const setHover = props.setHover;\n  const selectedData = props.selectedData;\n  const [fill, setFill] = React.useState('#4fbbd6');\n\n  function enter() {\n    setHover(d);\n    setFill('#D55D0E');\n\n  }\n\n  function leave() {\n    setHover(null);\n    setFill('#4fbbd6')\n  }\n\n  if(selectedData !== null && selectedData !== undefined && d.includes(selectedData[0])) {\n    return (<rect\n      // key={d.mass/1000}\n      style={{'fill': '#D55D0E'}}\n      className=\"bar\"\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      key={key}\n      onMouseEnter={enter}\n      onMouseLeave={leave}\n    />)\n  }\n  return (<rect\n    // key={d.mass/1000}\n    style={{'fill': fill}}\n    className=\"bar\"\n    x={x}\n    y={y}\n    width={width}\n    height={height}\n    key={key}\n    onMouseEnter={enter}\n    onMouseLeave={leave}\n  />)\n}\n\n\nexport default function MassChart(props) {\n  const classes = useStyles();\n  const data = props.data;\n  const selectedData = props.selectedData;\n  const setSelectedData = props.setSelectedData;\n  const [hover, setHover] = React.useState(null);\n\n  function vw(view_width) {\n    return view_width * (window.innerWidth / 100)\n  }\n\n  function vh(view_height) {\n    return view_height * (window.innerHeight / 100)\n  }\n\n  const svgWidth = vw(23),\n        svgHeight = vh(24);\n\n  const margin = { top: vh(3), right: 0, bottom: 0, left: vw(5) },\n         width = svgWidth - margin.left - margin.right,\n        height = svgHeight - margin.top - margin.bottom;\n\n  const x = scaleLinear()\n          .domain([0, mean(data, function(d) { return +d.mass/1000 })*2])\n          .range([0, width]);\n\n\n  // Ended up being way too many, theres a ton of overlap, but leaving in for adjustment\n  // const num_unique_masses = Array.from(data.map(function(d){return d.roadname;}).keys()).count;\n\n  const hist = histogram()\n            .value(function(d) { return d.mass/1000; })\n            .domain(x.domain())\n            .thresholds(x.ticks(10)); \n\n  const bins = hist(data);\n\n  const y_max = max(bins, function(d) { return d.length; })\n\n  const y = scaleLinear()\n      .range([height, 0])\n      .domain([0, y_max]);\n\n  function ToolTip() {\n    if(hover !== null) {\n      return (\n        <text className={classes.text} y={vh(8)} x={vw(18)} style={{fill: '#D55D0E'}}>\n          {\"Mass \" + hover.x0 + \"-\" + hover.x1 + \" (kg) (\" +  hover.length + \")\"}\n        </text>\n      )\n    }\n    return <div />\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <svg className={classes.svg}>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <g transform={`translate(0, ${height})`} ref={node => select(node).call(axisBottom(x))} />\n          <g>\n            <g ref={node => select(node).call(axisLeft(y).ticks(10))}/> \n            <text className={classes.text} transform=\"rotate(-90)\" y={-vw(2)-5} x={-svgHeight/4} style={{fill: '#4fbbd6'}}>\n              # Meteorites\n            </text>\n          </g>\n          {bins.map((d,i)=> {\n            return (<Bar \n              d={d}\n              selectedData={selectedData}\n              setHover={setHover}\n              className=\"bar\"\n              x={x(d.x0)+1}\n              y={y(d.length)}\n              width={x(d.x1) - x(d.x0) - 2}\n              height={height - y(d.length)}\n              key={\"bin_\"+i}\n            />)\n          })}\n\n          <text className={classes.text} y={vh(26)} x={svgWidth/2+vw(1)} style={{fill: '#4fbbd6'}}>\n              Mass (kg)\n          </text>\n          <ToolTip />\n        </g>\n      </svg>\n    </Paper>\n  )\n};\n","// Thanks to: Amy Sitwala\n// https://codenebula.io/javascript/frontend/dataviz/2019/04/18/automatically-generate-chart-colors-with-chart-js-d3s-color-scales/\n\nfunction calculatePoint(i, intervalSize, colorRangeInfo) {\n    var { colorStart, colorEnd, useEndAsStart } = colorRangeInfo;\n    return (useEndAsStart\n      ? (colorEnd - (i * intervalSize))\n      : (colorStart + (i * intervalSize)));\n  }\n\nfunction interpolateColors(dataLength, colorScale, colorRangeInfo) {\n            var { colorStart, colorEnd } = colorRangeInfo;\n            var colorRange = colorEnd - colorStart;\n            var intervalSize = colorRange / dataLength;\n            var i, colorPoint;\n            var colorArray = [];\n          \n            for (i = 0; i < dataLength; i++) {\n              colorPoint = calculatePoint(i, intervalSize, colorRangeInfo);\n              colorArray.push(colorScale(colorPoint));\n            }\n          \n            return colorArray;\n  }\n\nexport {interpolateColors};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { scaleOrdinal} from 'd3-scale';\nimport { interpolateBlues } from 'd3-scale-chromatic'\nimport { pie, arc } from 'd3-shape';\nimport { entries } from 'd3-collection';\nimport { interpolateColors } from '../colorSchemeGenerator.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginBottom: '8px',\n    marginRight: '8px',\n    marginTop: '8px',\n    textAlign: 'center',\n    color: '#4fbbd6',\n    fontSize: '40px',\n    backgroundColor: '#242730',\n    minHeight: '32vh',\n    padding: '0 0 0 0'\n  },\n  svg: {\n    minHeight: '30vh',\n    minWidth: '100%',\n  },\n  text: {\n    textAnchor: 'middle',\n    fontSize: '18px'\n  },\n  title: {\n    fontSize: '25px',\n    textAnchor: 'middle'\n  },\n  arc: {\n    \"&:hover\": {\n      fill: '#D55D0E',\n    }\n  }\n}));\n\nfunction Arc(props) {\n  const classes = useStyles();\n  const d = props.d;\n  const color = props.color;\n  const x = props.x;\n  const setHover = props.setHover;\n  const [fill, setFill] = React.useState(color(d.data.key));\n  const selectedData = props.selectedData;\n\n  function process(c) {\n    return c\n            .replace(/[0-9]/g, '')\n            .replace(/(.*)\\s/g,'')\n            .replace(/(^[.*+\\-?^${}()|[\\]\\\\/])/g,'')\n            .replace(/([.*+\\-?^${}()|[\\]\\\\/]$)/g,'');\n  }\n\n  function enter() {\n    setHover(d);\n    setFill('#D55D0E');\n  }\n\n  function leave() {\n    setHover(null);\n    setFill(color(d.data.key));\n  }\n\n  if(selectedData !== null && selectedData[0] !== undefined && process(selectedData[0].class) === d.data.key) {\n    return (\n      <g className={classes.arc} key={\"arc_\"+d.data.key}>\n          <path d={x()} fill={'#D55D0E'} onMouseEnter={enter} onMouseLeave={leave} />\n      </g>\n    )\n  }\n  return (\n    <g className={classes.arc} key={\"arc_\"+d.data.key}>\n        <path d={x()} fill={fill} onMouseEnter={enter} onMouseLeave={leave} />\n    </g>\n  )\n}\n\n\nexport default function ClassChart(props) {\n  const classes = useStyles();\n  const data = props.data;\n  const selectedData = props.selectedData;\n  const [hover, setHover] = React.useState(null);\n\n  function vw(view_width) {\n    return view_width * (window.innerWidth / 100)\n  }\n\n  function vh(view_height) {\n    return view_height * (window.innerHeight / 100)\n  }\n\n  const svgWidth = vw(23),\n        svgHeight = vh(24);\n\n\n  const margin = { top: vh(2.5), right: 0, bottom: 0, left: 0 },\n         width = svgWidth - margin.left - margin.right,\n        height = svgHeight - margin.top - margin.bottom;\n\n  var radius = Math.min(width, height) * 3/5\n\n  var all_classes = Array.from(data.map(function(d)\n      {return d.class\n                .replace(/[0-9]/g, '')\n                .replace(/(.*)\\s/g,'')\n                .replace(/(^[.*+\\-?^${}()|[\\]\\\\/])/g,'')\n                .replace(/([.*+\\-?^${}()|[\\]\\\\/]$)/g,'');\n      }).values())\n\n  var counts = {};\n\n  for (var i = 0; i < all_classes.length; i++) {\n    var cls = all_classes[i];\n    counts[cls] = counts[cls] ? counts[cls] + 1 : 1;\n  }\n\n const colorRangeInfo = {\n        colorStart: .05,\n        colorEnd: 0.9,\n        useEndAsStart: true,\n      };\n\n  const colorScale = interpolateBlues;\n\n  var scheme = interpolateColors(Object.keys(counts).length,colorScale,colorRangeInfo)\n\n\n  var keysSorted = Object.keys(counts).sort(function(a,b){return counts[b]-counts[a]})\n\n  var color = scaleOrdinal()\n  .domain(keysSorted)\n  .range(scheme)\n\n \n  var make_pie = pie()\n    .value(function(d) {return d.value; });\n  var data_ready = make_pie(entries(counts));\n\n  var x = arc().innerRadius(0).outerRadius(radius).startAngle(0).endAngle(Math.PI * 2);\n\n  // TODO: Add legend or tooltip\n  // TODO: Center Pie Chart\n  // TODO: Fix labels\n\n  const pad = Math.PI/180\n\n  function ToolTip() {\n    if(hover !== null) {\n      return (\n        <text className={classes.text} y={vh(16)} x={vw(12)} style={{fill: '#D55D0E'}}>\n          {\"Class \" + hover.data.key + \" (\" + hover.data.value + \")\"}\n        </text>\n      )\n    }\n    return <div />\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <svg className={classes.svg} id=\"ClassChart\">\n        <text className={classes.title} y={vh(2.5)} x={vw(12)} style={{fill: '#4fbbd6'}}>\n          Meteorite Class\n        </text>\n        <g transform={`translate(${width/2+radius/16}, ${height/2+radius/4+margin.top})`} key={\"pie_chart\"}>\n           {\n            data_ready.map(d => {\n              x = arc().innerRadius(radius/1.5).outerRadius(radius).startAngle(d.startAngle+pad).endAngle(d.endAngle-pad);\n              \n              return (\n                  <Arc x={x} d={d} color={color} setHover={setHover} selectedData={selectedData}/>\n                )\n            })\n          }\n        </g>\n        <ToolTip />\n      </svg>\n    </Paper>\n  )\n};\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport HighlightOffOutlinedIcon from '@material-ui/icons/HighlightOffOutlined';\n\nconst YEARS = [1980, 2020]\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles({\n  paper: {\n    marginLeft: '8px',\n    textAlign: 'center',\n    color: '#4fbbd6',\n    fontSize: '18px',\n    backgroundColor: '#242730',\n    minHeight: '33vh'\n  },\n  text: {\n    paddingBottom: '24px',\n  },\n  green: {\n    color: '#48c74e',\n    marginRight: '16px'\n  },\n  outline_green: {\n    borderColor: '#48c74e',\n    height: '100%'\n  },\n  timeline: {\n    marginTop: '24px',\n    fontSize: '16px',\n  },\n  load: {\n    fontSize: '16px',\n  },\n  alert: {\n    backgroundColor: '#4fbbd6',\n  }\n});\n\nconst Timeline = withStyles({\n  root: {\n    color: '#4fbbd6',\n    maxWidth: '90%'\n  }\n})(Slider)\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function TogglePanel(props) {\n  const classes = useStyles();\n  const [smallSnack, setSnackSmall] = React.useState(false);\n  const [mediumSnack, setSnackMedium] = React.useState(false);\n  const [largeSnack, setSnackLarge] = React.useState(false);\n  const [animation, setAnimation] = React.useState(null);\n  const timeline = props.timeline;\n  const setTimeline = props.setTimeline;\n  const setData = props.setData;\n\n  const clickSmall = () => {\n    setSnackSmall(true);\n    setSnackMedium(false);\n    setSnackLarge(false);\n    setData('small');\n  }\n  const closeSmall = (event, reason) => {\n    if(reason === 'clickaway') {\n      return;\n    }\n    setSnackSmall(false);\n  }\n\n  const clickMedium = () => {\n    setSnackSmall(false);\n    setSnackMedium(true);\n    setSnackLarge(false);\n    setData('medium');\n  }\n  const closeMedium = (event, reason) => {\n    if(reason === 'clickaway') {\n      return;\n    }\n    setSnackMedium(false);\n  }\n\n  const clickLarge = () => {\n    setSnackSmall(false);\n    setSnackMedium(false);\n    setSnackLarge(true);\n    setData('large');\n  }\n  const closeLarge = (event, reason) => {\n    if(reason === 'clickaway') {\n      return;\n    }\n    setSnackLarge(false);\n  }\n\n\n  const timelineChange = (event, newValue) => {\n    setTimeline(newValue);\n  };\n\n  const startAnimation = () => {\n    var tmpTimeline = timeline;\n    if(tmpTimeline[0] === YEARS[0] && tmpTimeline[1] === YEARS[1]) {\n      tmpTimeline = [YEARS[0], YEARS[0]+5];\n    }\n    setTimeline(tmpTimeline);\n    var interval = setInterval(() => {\n      tmpTimeline[0] += 5;\n      tmpTimeline[1] += 5;\n      if(tmpTimeline[1] > YEARS[1]) {\n        setAnimation(null);\n        setTimeline([YEARS[0], YEARS[1]]);\n        clearInterval(interval);\n        return;\n      }\n      setTimeline(tmpTimeline);\n    }, 1000);\n    setAnimation(interval);\n  }\n\n  const pauseAnimation = () => {\n    clearInterval(animation);\n  }\n\n  const stopAnimation = () => {\n    clearInterval(animation);\n    setAnimation(null);\n    setTimeline([YEARS[0], YEARS[1]]);\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.text} >Data Options</div>\n\n      <Typography className={classes.load} gutterBottom>\n        Load Data Set\n      </Typography>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={clickSmall} >Small</Button>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={clickMedium} >Medium</Button>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={clickLarge} >Large</Button>\n\n      <Typography className={classes.timeline} id=\"range-slider\" gutterBottom>\n        Data Range ({timeline[0]} - {timeline[1]})\n      </Typography>\n      <Timeline\n        value={timeline}\n        onChange={timelineChange}\n        min={YEARS[0]}\n        max={YEARS[1]}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n      />\n\n      <Typography className={classes.timeline} id=\"range-slider\" gutterBottom>\n        Timeline Animation\n      </Typography>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={startAnimation} ><PlayCircleOutlineIcon /></Button>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={pauseAnimation} ><PauseCircleOutlineIcon /></Button>\n      <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" size=\"small\" onClick={stopAnimation} ><HighlightOffOutlinedIcon /></Button>\n\n\n      <Snackbar open={smallSnack} autoHideDuration={6000} onClose={closeSmall}>\n        <Alert onClose={closeSmall} severity=\"success\" color=\"info\" classes={{filledInfo: classes.alert}}>\n          Loading small data set!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={mediumSnack} autoHideDuration={6000} onClose={closeMedium}>\n        <Alert onClose={closeMedium} severity=\"success\" color=\"info\" classes={{filledInfo: classes.alert}}>\n          Loading medium data set!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={largeSnack} autoHideDuration={6000} onClose={closeLarge}>\n        <Alert onClose={closeLarge} severity=\"success\" color=\"info\" classes={{filledInfo: classes.alert}}>\n          Loading large data set!\n        </Alert>\n      </Snackbar>\n\n\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    color: '#4fbbd6',\n    backgroundColor: '#242730',\n  },\n  green: {\n    color: '#48c74e'\n  },\n  outline_green: {\n    borderColor: '#48c74e',\n    height: '100%'\n  },\n  box: {\n    backgroundColor: '#242730',\n    color: '#4fbbd6',\n    borderRadius: '0px'\n  },\n  paper: {\n    borderRadius: '0px'\n  },\n  link: {\n    color: 'white'\n  }\n}));\n\nexport default function InfoBox(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog className={classes.dialog} classes={{paper: classes.paper}} open={open} onClose={handleClose}>\n        <DialogTitle className={classes.box} >Meteorite Data Visualizer</DialogTitle>\n        <DialogContent className={classes.box} >\n          <DialogContentText className={classes.box}>\n            Welcome to the meteorite data visulizer. This page shows all the meteorite data ever collected by NASA.\n            You can view the original dataset <a className={classes.link} href=\"https://data.nasa.gov/Space-Science/Meteorite-Landings/gh4g-9sfh\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n            <br />\n            Please enjoy.\n            <br /><br />\n            View the source code <a className={classes.link} href=\"https://github.com/0bLondon/VizFinal\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\n            <br /><br />\n            Made with ❤️ by Jeremy Kanovsky & Ben London\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.box} >\n          <Button className={classes.green} classes={{outlined: classes.outline_green}} variant=\"outlined\" onClick={handleClose} >\n            Done!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Deck from './Map';\nimport DataTable from './DataTable';\nimport MassChart from './MassChart';\nimport ClassChart from './ClassChart';\nimport TogglePanel from './TogglePanel';\nimport InfoBox from './InfoBox';\nimport small_data from '../meteorites_small';\nimport medium_data from '../meteorites_medium';\nimport large_data from '../meteorites_large';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    padding: theme.spacing(1),\n    marginBottom: '8px',\n    marginRight: '8px',\n    textAlign: 'center',\n    color: '#4fbbd6',\n    fontSize: '40px',\n    backgroundColor: '#242730'\n  },\n  deck: {\n    marginBottom: '8px',\n  }\n}));\n\nexport default function Page() {\n  const classes = useStyles();\n  const [selectedData, setSelectedData] = useState(null);\n  const [timeline, setTimeline] = useState([1980, 2020])\n  const [totalData, setTotalData] = useState(small_data)\n  const [dispData, setDispData] = useState(small_data)\n  const MapState = React.createRef();\n\n  function setData(quantity) {\n    if(quantity === 'small') {\n      setTotalData(small_data);\n      setDispData(small_data)\n    } else if (quantity === 'medium') {\n      const data = small_data.concat(medium_data)\n      setTotalData(data);\n      setDispData(data)\n    } else if (quantity === 'large') {\n      const data = small_data.concat(medium_data).concat(large_data);\n      setTotalData(data);\n      setDispData(data)\n    }\n  }\n\n  function filter_timeline(values) {\n    setTimeline(values);\n    setDispData(totalData.filter(d => (d.year >= values[0] && d.year <= values[1])));\n  }\n\n  function updateMapHover(d) {\n    setSelectedData(d);\n    MapState.current.setSelectedData(d);\n  }\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n\n        <Grid item xs={9}>\n          <Deck data={dispData} selectedData={selectedData} hoverCallback={setSelectedData} ref={MapState}/>\n\n          <Grid container spacing={1}>\n            <Grid item xs={3}>\n              <TogglePanel setData={setData} timeline={timeline} setTimeline={filter_timeline} />\n            </Grid>\n\n            <Grid item xs={9}>\n              <DataTable data={dispData} selectedData={selectedData} hoverCallback={updateMapHover} />\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        <Grid item xs={3}>\n          <MassChart data={dispData} selectedData={selectedData} setSelectedData={updateMapHover} />\n          <ClassChart data={dispData} selectedData={selectedData} />\n          <Paper className={classes.paper} style={{minHeight: '31vh'}}>GRAPH 3</Paper>\n        </Grid>\n\n      </Grid>\n\n      {/*<InfoBox />*/}\n\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Page from './components/Page'\n\nReactDOM.render(<Page />, document.getElementById('root'));\n"],"sourceRoot":""}